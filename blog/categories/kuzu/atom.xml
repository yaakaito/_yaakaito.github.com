<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Kuzu | yaakaito.org]]></title>
  <link href="http://yaakaito.org/blog/categories/kuzu/atom.xml" rel="self"/>
  <link href="http://yaakaito.org/"/>
  <updated>2013-05-20T17:14:58+09:00</updated>
  <id>http://yaakaito.org/</id>
  <author>
    <name><![CDATA[yaakaito]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[【解決した】TypeScriptで複数ファイルに渡って同一moduleを定義したくてハマってる]]></title>
    <link href="http://yaakaito.org/blog/2013/03/25/typescript-module-division-files/"/>
    <updated>2013-03-25T08:42:00+09:00</updated>
    <id>http://yaakaito.org/blog/2013/03/25/typescript-module-division-files</id>
    <content type="html"><![CDATA[<h2>解決した</h2>

<p>どうも俺が0.8.3だと思っていた<code>tsc</code>は0.8.0だった。
バージョンが古いなんて生易しいもんじゃねぇ、気がついたらnode環境がぶっ壊れていた、何を言っているかわからねーと思うが(ry
npm listで出てくるtscと、パスが通ってるtscが違った。とりあえず直した、お騒がせしました。</p>

<p>本来下に書いてある</p>

<p>```javascript
module A {
  class Hoge {</p>

<pre><code>// ...
</code></pre>

<p>  }
  export var hoge = new Hoge();
}
```</p>

<p>というのは、0.8.3時点でコンパイルでエラーになるようになっています、<code>Hoge</code>をexportしろ、とのことです。
で、Hogeの中でさらにインナークラスとか呼んでると、それもexportしなくちゃいけなくてヤダーなので、ほしいメソッドだけ<code>interface</code>にしました。</p>

<p>あと、<code>reference</code>を反対にするとなんかおかしい問題は健在っぽいです。
いろいろ邪推してみましたが、それにあんまり意味はないので、issueにしてこようと思います。</p>

<hr />

<p>　</p>

<p>こんにちは！うきょーです！分からないので誰か教えてください。
TypeScriptに<code>module</code>って機能があるんですが、こいつでハマってる。</p>

<p>というのもこれって、</p>

<p>```javascript
module A {
  class Hoge {</p>

<pre><code>// ...
</code></pre>

<p>  }
}
```</p>

<p>みたいにしておくと、</p>

<p>```javascript
var A;
(function (A) {</p>

<pre><code>var Hoge = (function () {
    function Hoge() { }
    return Hoge;
})();  
</code></pre>

<p>})(A || (A = {}));
```</p>

<p>こうなるわけ。
で、<code>module</code>は複数のファイルに渡って同一のものを定義できるらしい。
実際そういう感じになっているし、そうなんだろう、分かる。</p>

<p>問題はこのモジュール内で変数定義しようとしたときに起こった。
例えばシングルトン的な感じでオブジェクトを外に出したいときに、</p>

<p>```javascript
module A {
  class Hoge {</p>

<pre><code>// ...
</code></pre>

<p>  }
  export var hoge = new Hoge();
}
```</p>

<p>とすれば、</p>

<p>```javascript
var A;
(function (A) {</p>

<pre><code>var Hoge = (function () {
    function Hoge() { }
    return Hoge;
})(); 
A.hoge = new Hoge(); 
</code></pre>

<p>})(A || (A = {}));
```</p>

<p>となる、ここまではよい。
もう一個同じ<code>module</code>を実装しているファイルがあるとする、</p>

<p>```javascript
module A {
  class Fuga {</p>

<pre><code>// ...
</code></pre>

<p>  }
}
```</p>

<p>で、この二つを個別にコンパイルする分には何も起こらないし、普通に実行できてるっぽいんだけど、</p>

<p>```javascript
/// <reference path="Fugaの方.ts" /></p>

<p>module A {
  class Hoge {</p>

<pre><code>// ...
</code></pre>

<p>  }
  export var hoge = new Hoge();
}
```</p>

<p>という風にreferenceすると <code>export var hoge = new Hoge();</code> でHogeが見つからなくなる。真上にあるが・・・。</p>

<p>例えばこういう感じにしてビルドしてみても駄目。</p>

<p><code>javascript
/// &lt;reference path="Fugaの方.ts" /&gt;
/// &lt;reference path="Hogeの方.ts" /&gt;
</code></p>

<p>なんだけど、順番を入れ替えると・・・</p>

<p><code>javascript
/// &lt;reference path="Hogeの方.ts" /&gt;
/// &lt;reference path="Fugaの方.ts" /&gt;
</code></p>

<p>なんか知らんが通る。そんな参照で大丈夫か？</p>

<p>要するに、コンパイルするときに</p>

<p>```javascript
module A {
  // ...
}</p>

<p>module A {
  // ...
}
```</p>

<p>という状態になると、二番目以降の<code>module</code>内で参照が死ぬ。
けど<code>class</code>とかでプロパティに持つ分には大丈夫という謎状況。</p>

<p>バグなのかな、バグならバグでよいんだけど。</p>

<p>で、ここまで説明してきたんだけど、これエラーは出るけど、コンパイルはちゃんと通った跡がある、どっちやねん。</p>

<p>一番いい解説を頼む。</p>

<p>(誰も知らなさそうなら公式に投げてみようと思います。)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ｼｬﾊﾞﾄﾞｭﾋﾞ!ﾀｯﾁ!ﾀｲｼｮｰｸ!(ドワンゴ退職しました)]]></title>
    <link href="http://yaakaito.org/blog/2012/09/28/dwango/"/>
    <updated>2012-09-28T10:21:00+09:00</updated>
    <id>http://yaakaito.org/blog/2012/09/28/dwango</id>
    <content type="html"><![CDATA[<p>こんにちは！うきょーです！株式会社ドワンゴを退職しました！</p>

<p><a href="http://www.amazon.co.jp/registry/wishlist/CKH9SKYKNOT5">とりあえずなんかください。</a></p>

<p>ドワンゴには19歳の時からお世話になっていているので、だいたい3年くらい働いていたことになります。
主な業務はiOSアプリ開発でした、当初Objective-Cってなんですか、だった僕ですが、最終的には「オブジェクティブな汁が足りない」とかキチガイっぽいことを言っていたと思います。</p>

<p>ドワンゴではたくさんエキサイティングなことをさせてもらいました、なんとなく振り返ってみようと思います。</p>

<h2>ニコニコiPhone</h2>

<p>最初から中頃まで関わっていた仕事です。
生放送のサービスイン、その後の高画質化〜安定期までで、おもにプレイヤーを書いていました。
少しづつでも確実に大きくなっていくサービスを見ているのは楽しいもので、単純に楽しかったプロジェクトでした。
最後の方はプレイヤー全部改修して使いやすくしようとか、訳あって途中で引き継いだのですが、
iPad版のリーダーみたいなことをやらせてもらって、いろいろよい経験ができました。</p>

<h2>ニコニコiPhoneHTML5プレイヤー</h2>

<p>突然やってきた仕事でした、去年の9月中の話です。
「AU iPhone出るまでにiPhoneのブラウザでも再生できるようにしてほしい(10月中)」
1ヶ月ない・・・だと・・・。</p>

<p>というわけでいわゆるHTML5をプロダクトでやることになりました。
上司にはマネージャーとしてサポートしてもらったのですが、急な案件だったために実質一人で立ち向かうことに。
一人なのでリーダーですし、デザイナーのリソースもあいてないよ、ということだったので、リーダー兼プログラマー兼デザイナーというわりと楽しい状況でした。
死ぬ死ぬいいながら働いていましたが、なんとなくプロダクトが発足してからリリースまでっていう流れを早送りで体験できてよい気分でした。
途中で何度「これ終わったらW3C絶対殺す」と言ったか、もう覚えていません。
ツメが甘かった部分もいくつかありましたが、上司が補助してくれて、無事にリリースできました、本当によかった。
なんだかんだで一番思い入れのあるプロダクトでした。</p>

<h2>ニコニコ書籍</h2>

<p>後半はここでした。最初は火消しだったのですが、最終的には異動することになりました。
アプリを作っていたのもそうなんですが、赤いのに「iOSもテストガンガンやりたい！なんとかして！」みたいなことを言われて、
そっちのことを結構やったりとか、割と自由な感じで動いていました。(納期が緩いとかそういう話ではないですが。)
この辺のアレはいまがんばって文章にしているところで、ちゃんと成果として少しづつ公開していきます。
技術話とかそういうのも楽しかったですが、どっちかと言えばニコニコ書籍ではチームのつくりかた、みたいなのを見れた方が大きかったです。</p>

<h2>研究開発チャンネル</h2>

<p>エンジニアとはほとんど関係ないです。ドワンゴ研究開発チャンネルというニコニコのチャンネルで生放送をしたり出たりしていました。
なんというか、いろいろありました、という感じです。
機材の使い方から、プロデューサーっぽいことから、タレントっぽいことまでやってました。(こことは関係なしに何回かタレントっぽいこともやってましたが)
駆け足で大変でしたが、エンジニア以外の仕事もやれてよかったです。</p>

<h2>まとめ</h2>

<p>ともかくたくさん成長できたと思うし、とても楽しかったです！！！
みなさんお世話になりました！！！！！</p>

<p>うきょー先生の次回作にご期待ください！！！！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[22歳になりました]]></title>
    <link href="http://yaakaito.org/blog/2012/09/26/22-birthday/"/>
    <updated>2012-09-26T15:56:00+09:00</updated>
    <id>http://yaakaito.org/blog/2012/09/26/22-birthday</id>
    <content type="html"><![CDATA[<p>こんにちは！うきょーです！22歳になりました！！！！！！！！！</p>

<p>今年もいろいろありました！！！！！！！！わけあって今仕事してません！！！！</p>

<p>いろいろあったので今月末くらいに(もう末ですけど)いろいろなんかかくと思います！！！！</p>

<p><a href="http://www.amazon.co.jp/registry/wishlist/CKH9SKYKNOT5">なんかください！！！！！！</a></p>

<p>ところで「みいくんのちくわぶ」送ってくれた人が誰か分からないので名乗り出てください！！！！</p>
]]></content>
  </entry>
  
</feed>
