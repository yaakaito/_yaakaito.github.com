<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[yaakaito github bloh]]></title>
  <link href="http://yaakaito.github.com/atom.xml" rel="self"/>
  <link href="http://yaakaito.github.com/"/>
  <updated>2012-07-31T13:43:52+09:00</updated>
  <id>http://yaakaito.github.com/</id>
  <author>
    <name><![CDATA[yaakaito]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Angular.jsでcoderwallのバッチ取得してみる]]></title>
    <link href="http://yaakaito.github.com/blog/2012/07/30/angular-coderwall/"/>
    <updated>2012-07-30T00:53:00+09:00</updated>
    <id>http://yaakaito.github.com/blog/2012/07/30/angular-coderwall</id>
    <content type="html"><![CDATA[<h2>Coderwallのバッチ取得するのはよくみるけど</h2>

<p><a href="http://angularjs.org/">Angular</a>でやってみた的なのはみないなーと思ったのでやってみた。
といってもjQueryなんかでやるのとそんなに変わらないです。</p>

<h2>バッチを表示させるHTMLを書く</h2>

<p>とりあえずリストにイメージを突っ込んでいく感じにすることにしました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">ng-controller=</span><span class="s">&quot;coderwallController&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li</span> <span class="na">ng-repeat=</span><span class="s">&quot;badge in badges&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;img</span> <span class="na">ng-src=</span><span class="s">&quot;&quot;</span> <span class="na">alt=</span><span class="s">&quot;&quot;</span> <span class="na">title=</span><span class="s">&quot;&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じでデータをバインディングします。</p>

<h2>データを取得する</h2>

<p>jQueryなんかでgetJSONとかするのとそんなに変わらないです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">coderwallController</span><span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">$http</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">$scope</span><span class="p">.</span><span class="nx">badges</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>  <span class="nx">$http</span><span class="p">.</span><span class="nx">jsonp</span><span class="p">(</span><span class="s2">&quot;http://coderwall.com/yaakaito.json?callback=JSON_CALLBACK&quot;</span><span class="p">).</span><span class="nx">success</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span><span class="nx">status</span><span class="p">,</span><span class="nx">header</span><span class="p">,</span><span class="nx">config</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">$scope</span><span class="p">.</span><span class="nx">badges</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">badges</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">$scope</span><span class="p">.</span><span class="nx">badges</span><span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>で、取得できました！やりましたね！</p>

<p>{ %img http://yaakaito.github.com/images/angular-coderwall.png %}</p>

<p>全文はgistにあります。</p>

<div><script src='https://gist.github.com/3199870.js?file='></script>
<noscript><pre><code>&lt;!doctype html&gt;
&lt;html ng-app&gt; 
  &lt;head&gt;
    &lt;script src=&quot;http://code.angularjs.org/angular-1.0.1.min.js&quot;&gt;&lt;/script&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div ng-controller=&quot;coderwallController&quot;&gt;
      &lt;ul&gt;
        &lt;li ng-repeat=&quot;badge in badges&quot;&gt;
          &lt;img ng-src=&quot;{{badge.badge}}&quot; alt=&quot;{{badge.description}}&quot; title=&quot;{{badge.name}}&quot; /&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/body&gt;

  &lt;script&gt;
    function coderwallController($scope, $http) {
    
      $scope.badges = [];   
      $http.jsonp(&quot;http://coderwall.com/yaakaito.json?callback=JSON_CALLBACK&quot;).success(function(data,status,header,config){
        $scope.badges = data.data.badges;
        console.log($scope.badges);
});
    }
    
  &lt;/script&gt;
&lt;/html&gt;</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[テストのページだよ]]></title>
    <link href="http://yaakaito.github.com/blog/2012/07/28/test-page/"/>
    <updated>2012-07-28T23:06:00+09:00</updated>
    <id>http://yaakaito.github.com/blog/2012/07/28/test-page</id>
    <content type="html"><![CDATA[<p>aaa
aaa
aaa
aaa
aa
aa
a
a
a
a</p>

<p>a
a
a
aaaaaaaaa</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressのデザインを楽に開発するmakefile]]></title>
    <link href="http://yaakaito.github.com/blog/2012/07/22/octopress-design-makefile/"/>
    <updated>2012-07-22T13:09:00+09:00</updated>
    <id>http://yaakaito.github.com/blog/2012/07/22/octopress-design-makefile</id>
    <content type="html"><![CDATA[<h2>こんにちは！</h2>

<p>この記事は僕がプレビュー用にも使っているので無駄な部分も多いですが、あまり気にしないでくださいね！</p>

<h2>テンプレートをいじろう</h2>

<p>octopress/.themeの中に適当な名前でディレクトリを作って</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake install\["hoge"\]</span></code></pre></td></tr></table></div></figure>


<p>とかすればテンプレートがインストールできるわけですが、これをしたあとに直接soruceを弄って〜みたいなことは嫌な訳です。
ですが僕は天才なのでmakeを使うことにしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>all:
</span><span class='line'>  cd octopress
</span><span class='line'>  yes | rake install\["hoge"\]
</span><span class='line'>  rake generate
</span><span class='line'>  rake preview</span></code></pre></td></tr></table></div></figure>


<p>これで.theme/hogeの方からmakeをするだけで、.theme/hogeの中で修正したものをインストールしてコンパイルしてくれるようになりました、やりましたね！！！</p>

<h2>今日も天気がいいですね</h2>

<p>天気がいいとObjective-Cが書きたくなりますよね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;スティーブ・天気がいい・ジョブズ];</span>
</span></code></pre></td></tr></table></div></figure>


<p>JavaScriptもいいかもしれません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">jobs</span> <span class="o">=</span> <span class="s2">&quot;スティーブ・天気がいい・ジョブズ&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>こういうの</h2>

<p>こういうのでるかな <code>hoge</code> ？</p>

<h2>明日は晴れるでしょうか</h2>

<p>晴れるといいですね。
<img src="http://cdn-ak.f.st-hatena.com/images/fotolife/y/yaakaito/20120117/20120117065430.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressのsourceを共有してみる]]></title>
    <link href="http://yaakaito.github.com/blog/2012/07/16/doukana/"/>
    <updated>2012-07-16T17:28:00+09:00</updated>
    <id>http://yaakaito.github.com/blog/2012/07/16/doukana</id>
    <content type="html"><![CDATA[<p>AirとRetina、両方で書く場合があるのでsource以下を共有することにした。
全部共有しても・・・という感じなのでsource以下を全部サブモジュールっぽく扱うようにした。
多分これでうまくいってるはず！</p>

<h2>airから書いてdeployした</h2>

<h2>こんどはRetinaから書きたしてdeployした</h2>

<p>イイネ！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tanomu]]></title>
    <link href="http://yaakaito.github.com/blog/2012/07/16/tanomu/"/>
    <updated>2012-07-16T17:08:00+09:00</updated>
    <id>http://yaakaito.github.com/blog/2012/07/16/tanomu</id>
    <content type="html"><![CDATA[<p>たのむよーーーー</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-CからgithubAPI叩く]]></title>
    <link href="http://yaakaito.github.com/blog/2012/07/16/objective-c-github-api/"/>
    <updated>2012-07-16T12:07:00+09:00</updated>
    <id>http://yaakaito.github.com/blog/2012/07/16/objective-c-github-api</id>
    <content type="html"><![CDATA[<p>Objective-CからgithubAPI叩く用があったので試してみた。</p>

<h1>UAGithubEngine</h1>

<p>公式でもおすすめされてるライブラリですけど、結論からいうと駄目でした
GitAppっていうアプリがそうなんですけど、リクエストパラメーター付けずにgithubがデフォルトで返してくるレスポンスしか受け取れない感じになってしまっている・・・
特によくわかるのがリポジトリ取得で、githubがデフォルトで返してくるのが30件っぽいんだけど(ソート順はよくわからない)、それしか受け取れないので、リポジトリが31個以上ある人の分は全部表示できない。
pageオプションとかあったので試してみたけどどうも聞いてない様子なのでウゴゴゴゴ・・・という具合。
per_pageとかをちゃんと付ければとれるので、まあ自分で叩けってことですかね・・・。</p>

<h1>他のgithubアプリとか</h1>

<h2>iOctocat</h2>

<p>自前でちゃんとリクエストパラメーター付けて取ってる、エラい</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hello world]]></title>
    <link href="http://yaakaito.github.com/blog/2012/07/14/hello-world/"/>
    <updated>2012-07-14T16:43:00+09:00</updated>
    <id>http://yaakaito.github.com/blog/2012/07/14/hello-world</id>
    <content type="html"><![CDATA[<p>こんにちは！！！！</p>
]]></content>
  </entry>
  
</feed>
